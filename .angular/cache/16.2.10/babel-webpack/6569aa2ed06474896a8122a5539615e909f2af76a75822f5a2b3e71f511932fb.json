{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../list.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction PostComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \" Description is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class PostComponent {\n  constructor(rou, ser, datePipe) {\n    this.rou = rou;\n    this.ser = ser;\n    this.datePipe = datePipe;\n    this.FormOne = new FormGroup({\n      title: new FormControl(),\n      description: new FormControl('', [Validators.required])\n    });\n  }\n  postData() {\n    const form = this.FormOne.value;\n    form.date = this.datePipe.transform(new Date(), 'dd MMM yyyy') || '';\n    this.ser.post(form).subscribe(res => {\n      this.rou.navigate(['']);\n    });\n  }\n  back() {\n    this.rou.navigate(['']);\n  }\n  static #_ = this.ɵfac = function PostComponent_Factory(t) {\n    return new (t || PostComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ListService), i0.ɵɵdirectiveInject(i3.DatePipe));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PostComponent,\n    selectors: [[\"app-post\"]],\n    decls: 18,\n    vars: 2,\n    consts: [[1, \"card\", \"shadow\", \"text-center\", \"mb-5\"], [1, \"card-header\", \"bg-primary\", \"text-light\"], [3, \"formGroup\"], [1, \"container\"], [1, \"row\"], [1, \"col\"], [\"type\", \"text\", \"name\", \"description\", \"formControlName\", \"description\", \"placeholder\", \"Write your daily task here....\", 1, \"form-control\", \"ms-5\", \"me-5\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"col-2\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"col-1\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"text-danger\"]],\n    template: function PostComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h4\");\n        i0.ɵɵtext(3, \"ADD TODO\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"form\", 2)(5, \"div\", 3)(6, \"div\", 4)(7, \"div\", 5)(8, \"div\");\n        i0.ɵɵelement(9, \"input\", 6);\n        i0.ɵɵtemplate(10, PostComponent_div_10_Template, 2, 0, \"div\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 8)(12, \"div\")(13, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function PostComponent_Template_button_click_13_listener() {\n          return ctx.FormOne.valid && ctx.postData();\n        });\n        i0.ɵɵtext(14, \"Add Task \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(15, \"div\", 10)(16, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function PostComponent_Template_button_click_16_listener() {\n          return ctx.back();\n        });\n        i0.ɵɵtext(17, \"Back\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.FormOne);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.FormOne.get(\"description\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"required\"]) && ((tmp_1_0 = ctx.FormOne.get(\"description\")) == null ? null : tmp_1_0.touched));\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","PostComponent","constructor","rou","ser","datePipe","FormOne","title","description","required","postData","form","value","date","transform","Date","post","subscribe","res","navigate","back","_","ɵɵdirectiveInject","i1","Router","i2","ListService","i3","DatePipe","_2","selectors","decls","vars","consts","template","PostComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","PostComponent_div_10_Template","ɵɵlistener","PostComponent_Template_button_click_13_listener","valid","PostComponent_Template_button_click_16_listener","ɵɵadvance","ɵɵproperty","tmp_1_0","get","errors","touched"],"sources":["/home/prathap/Videos/To-Do-Ui/src/app/post/post.component.ts","/home/prathap/Videos/To-Do-Ui/src/app/post/post.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ListService } from '../list.service';\nimport { FormControl, FormGroup, RequiredValidator, Validators } from '@angular/forms';\nimport { List } from '../list';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent {\n\nconstructor (private rou:Router,private ser:ListService, private datePipe: DatePipe) {};\n\nFormOne=new FormGroup({\n  title:new FormControl(),\n  description:new FormControl('',[Validators.required]),\n  \n\n});\n\npostData() {\n  \n  const form=this.FormOne.value as List;\n  \n  form.date = this.datePipe.transform(new Date(), 'dd MMM yyyy') || '';\n this.ser.post(form).subscribe((res)=>{\n   \n  this.rou.navigate(['']);\n\n  })\n\n}\nback() {\nthis.rou.navigate(['']);\n}\n\n}\n","<div class=\"card shadow text-center mb-5\">\n    <div class=\"card-header bg-primary text-light\">\n        <h4>ADD TODO</h4>\n    </div>\n\n\n<form [formGroup]=\"FormOne\">\n\n\n    \n\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col\">\n\n                <div>\n                    <input type=\"text\" name=\"description\" formControlName=\"description\" class=\"form-control ms-5 me-5\" placeholder=\"Write your daily task here....\">\n                  \n                    <!-- Display validation error message for required -->\n                    <div *ngIf=\"FormOne.get('description')?.errors?.['required'] && FormOne.get('description')?.touched\"\n                         class=\"text-danger\">\n                      Description is required.\n                    </div>\n                  \n                   \n                  </div>\n                  \n            </div>\n            <div class=\"col-2\">\n                <div>\n                    <button (click)=\"FormOne.valid && postData()\" class=\"btn btn-primary\">Add Task </button>\n                </div>\n            \n\n\n            </div>\n\n            <div class=\"col-1 \"><button (click)=\"back()\" class=\"btn btn-secondary \">Back</button></div>\n        </div>\n    </div>\n    \n     \n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}