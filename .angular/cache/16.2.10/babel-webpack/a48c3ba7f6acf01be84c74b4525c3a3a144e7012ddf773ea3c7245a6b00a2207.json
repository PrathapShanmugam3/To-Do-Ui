{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ListService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:3000/';\n  }\n  getAll() {\n    return this.http.get(`${this.baseUrl}getAll`);\n  }\n  post(list) {\n    return this.http.post(`${this.baseUrl}post`, list);\n  }\n  getByid(id) {\n    return this.http.get(`${this.baseUrl}getById/${id}`);\n  }\n  update(id, list) {\n    return this.http.put(`${this.baseUrl}update/${id}`, list);\n  }\n  deleteById(id) {\n    return this.http.delete(`${this.baseUrl}delete/${id}`);\n  }\n  static #_ = this.ɵfac = function ListService_Factory(t) {\n    return new (t || ListService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ListService,\n    factory: ListService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ListService","constructor","http","baseUrl","getAll","get","post","list","getByid","id","update","put","deleteById","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/prathap/Videos/To-Do-Ui/src/app/list.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient,HttpClientModule} from '@angular/common/http'\nimport { Observable } from 'rxjs';\nimport { List } from './list';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListService {\n\n  constructor(private http:HttpClient) { }\n\n  baseUrl='http://localhost:3000/'\n\n  getAll():Observable<List[]> {\n    return this.http.get<List[]>(`${this.baseUrl}getAll`);\n    }\n\n    post(list:List):Observable<List>{\n      return this.http.post<List>(`${this.baseUrl}post`,list);\n     \n     }\n\n     getByid(id:string):Observable<List> {\n      return this.http.get<List>(`${this.baseUrl}getById/${id}`)\n    }\n\n    update(id:string,list:List):Observable<List> {\n      return this.http.put<List>(`${this.baseUrl}update/${id}`,list);\n    }\n\n    deleteById(id:string):Observable<List> {\n      return this.http.delete<List>(`${this.baseUrl}delete/${id}`)\n    } \n    \n}\n"],"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAExB,KAAAC,OAAO,GAAC,wBAAwB;EAFO;EAIvCC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,GAAG,IAAI,CAACF,OAAO,QAAQ,CAAC;EACrD;EAEAG,IAAIA,CAACC,IAAS;IACZ,OAAO,IAAI,CAACL,IAAI,CAACI,IAAI,CAAO,GAAG,IAAI,CAACH,OAAO,MAAM,EAACI,IAAI,CAAC;EAExD;EAEAC,OAAOA,CAACC,EAAS;IAChB,OAAO,IAAI,CAACP,IAAI,CAACG,GAAG,CAAO,GAAG,IAAI,CAACF,OAAO,WAAWM,EAAE,EAAE,CAAC;EAC5D;EAEAC,MAAMA,CAACD,EAAS,EAACF,IAAS;IACxB,OAAO,IAAI,CAACL,IAAI,CAACS,GAAG,CAAO,GAAG,IAAI,CAACR,OAAO,UAAUM,EAAE,EAAE,EAACF,IAAI,CAAC;EAChE;EAEAK,UAAUA,CAACH,EAAS;IAClB,OAAO,IAAI,CAACP,IAAI,CAACW,MAAM,CAAO,GAAG,IAAI,CAACV,OAAO,UAAUM,EAAE,EAAE,CAAC;EAC9D;EAAC,QAAAK,CAAA,G;qBAzBQd,WAAW,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXnB,WAAW;IAAAoB,OAAA,EAAXpB,WAAW,CAAAqB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}